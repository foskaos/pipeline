# Generated by Django 5.1.5 on 2025-02-05 15:03

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content_slug', models.CharField(max_length=255)),
                ('schedule_id', models.IntegerField()),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('platform', models.CharField(max_length=50)),
                ('os_version', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Journey',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(max_length=255)),
                ('joint_slug', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'journey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JourneyActivity',
            fields=[
                ('journey_id', models.IntegerField(primary_key=True, serialize=False)),
                ('activity_id', models.IntegerField()),
            ],
            options={
                'db_table': 'journey_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('age_bracket', models.CharField(max_length=50)),
                ('sex', models.CharField(max_length=50)),
                ('hospital', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientJourney',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('patient_id', models.IntegerField()),
                ('journey_id', models.IntegerField()),
                ('invitation_date', models.DateField()),
                ('registration_date', models.DateField()),
                ('operation_date', models.DateField()),
                ('discharge_date', models.DateField()),
                ('consent_date', models.DateField()),
                ('clinician_id', models.IntegerField()),
            ],
            options={
                'db_table': 'patient_journey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StepResult',
            fields=[
                ('patient_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'step_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=50)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
            ],
            options={
                'db_table': 'survey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('patient_journey_id', models.IntegerField()),
                ('survey_id', models.IntegerField()),
                ('activity_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('score_value', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'survey_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsActivity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content_slug', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'activity',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsDevice',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=50)),
                ('os_version', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsIncrementalLog',
            fields=[
                ('id', models.IntegerField(default=1, primary_key=True, serialize=False)),
                ('schedule_id', models.IntegerField(default=0)),
                ('journey_id', models.IntegerField(default=0)),
                ('activity_id', models.IntegerField(default=0)),
                ('patient_id', models.IntegerField(default=0)),
                ('device_id', models.IntegerField(default=0)),
                ('survey_id', models.IntegerField(default=0)),
                ('step_result_date', models.DateField(null=True)),
                ('schedule_window', models.IntegerField(default=0, null=True)),
            ],
            options={
                'db_table': 'incremental_log',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsJourney',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('joint_slug', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'journey',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsPatient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('age_bracket', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSchedule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSurvey',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(blank=True, max_length=255)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, null=True, size=None)),
            ],
            options={
                'db_table': 'survey',
            },
        ),
        migrations.CreateModel(
            name='IncrementalLog',
            fields=[
                ('id', models.IntegerField(default=1, primary_key=True, serialize=False)),
                ('schedule_id', models.IntegerField(default=0)),
                ('journey_id', models.IntegerField(default=0)),
                ('activity_id', models.IntegerField(default=0)),
                ('patient_id', models.IntegerField(default=0)),
                ('device_id', models.IntegerField(default=0)),
                ('survey_id', models.IntegerField(default=0)),
                ('step_result_date', models.DateField(null=True)),
            ],
            options={
                'db_table': 'staging_incremental_log',
            },
        ),
        migrations.CreateModel(
            name='StagingActivityModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content_slug', models.CharField(blank=True, max_length=255)),
                ('schedule_id', models.IntegerField(blank=True)),
            ],
            options={
                'db_table': 'staging_activity',
            },
            managers=[
                ('StagingActivityManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingDeviceModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=50)),
                ('os_version', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'staging_device',
            },
            managers=[
                ('StagingDeviceManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingJourneyActivityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journey_id', models.IntegerField()),
                ('activity_id', models.IntegerField()),
            ],
            options={
                'db_table': 'staging_journey_activity',
            },
            managers=[
                ('StagingJourneyActivityManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingJourneyModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('joint_slug', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'staging_journey',
            },
            managers=[
                ('StagingJourneyManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingPatientJourneyModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('patient_id', models.IntegerField()),
                ('journey_id', models.IntegerField()),
                ('invitation_date', models.DateField(blank=True, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('operation_date', models.DateField(blank=True, null=True)),
                ('discharge_date', models.DateField(blank=True, null=True)),
                ('consent_date', models.DateField(blank=True, null=True)),
                ('clinician_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staging_patient_journey',
            },
            managers=[
                ('StagingPatientJourneyManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingPatientModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('age_bracket', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, max_length=255, null=True)),
                ('hospital', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'staging_patient',
            },
            managers=[
                ('StagingPatientManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingScheduleModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'staging_schedule',
            },
            managers=[
                ('StagingScheduleManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingStepResultsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('date', models.DateField()),
                ('value', models.IntegerField()),
            ],
            options={
                'db_table': 'staging_step_results',
            },
            managers=[
                ('StagingStepResultsManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingSurveyModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slug', models.CharField(blank=True, max_length=255)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), blank=True, default=list, null=True, size=None)),
            ],
            options={
                'db_table': 'staging_survey',
            },
            managers=[
                ('StagingSurveyManager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StagingSurveyResultsModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('patient_journey_id', models.IntegerField()),
                ('survey_id', models.IntegerField()),
                ('activity_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('score_value', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'staging_survey_results',
            },
            managers=[
                ('StagingSurveyResultsManger', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AnalyticsJourneyActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_id', models.ForeignKey(blank=True, db_column='activity_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsactivity')),
                ('journey_id', models.ForeignKey(blank=True, db_column='journey_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsjourney')),
            ],
            options={
                'db_table': 'journey_activity',
            },
        ),
        migrations.AddField(
            model_name='analyticsjourney',
            name='activities',
            field=models.ManyToManyField(through='pipeline.AnalyticsJourneyActivity', to='pipeline.analyticsactivity'),
        ),
        migrations.CreateModel(
            name='AnalyticsPatientJourney',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('invitation_date', models.DateField(blank=True, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('operation_date', models.DateField(blank=True, null=True)),
                ('discharge_date', models.DateField(blank=True, null=True)),
                ('consent_date', models.DateField(blank=True, null=True)),
                ('clinician_id', models.IntegerField(blank=True, null=True)),
                ('journey_id', models.ForeignKey(blank=True, db_column='journey_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsjourney')),
                ('patient_id', models.ForeignKey(blank=True, db_column='patient_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticspatient')),
            ],
            options={
                'db_table': 'patient_journey',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsPatientJourneyScheduleWindow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity_content_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('schedule_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('schedule_start_offset_days', models.IntegerField(blank=True, null=True)),
                ('schedule_end_offset_days', models.IntegerField(blank=True, null=True)),
                ('schedule_milestone_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_id', models.ForeignKey(blank=True, db_column='activity_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsactivity')),
                ('patient_id', models.ForeignKey(blank=True, db_column='patient_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticspatient')),
                ('patient_journey_id', models.ForeignKey(blank=True, db_column='patient_journey_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticspatientjourney')),
                ('schedule_id', models.ForeignKey(blank=True, db_column='schedule_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsschedule')),
            ],
            options={
                'db_table': 'patient_journey_schedule_window',
            },
        ),
        migrations.AddField(
            model_name='analyticsactivity',
            name='schedule_id',
            field=models.ForeignKey(blank=True, db_column='schedule_id', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsschedule'),
        ),
        migrations.CreateModel(
            name='AnalyticsScheduleWindow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_milestone_slug', models.CharField(max_length=255)),
                ('schedule_offset_start', models.IntegerField()),
                ('schedule_offset_end', models.IntegerField(blank=True, null=True)),
                ('schedule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_window', to='pipeline.analyticsschedule')),
            ],
            options={
                'db_table': 'schedule_window',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsStepResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.IntegerField()),
                ('patient_id', models.ForeignKey(blank=True, db_column='patient_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticspatient')),
            ],
            options={
                'db_table': 'step_results',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSurveyResults',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('score_value', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('activity_id', models.ForeignKey(blank=True, db_column='activity_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsactivity')),
                ('device_id', models.ForeignKey(blank=True, db_column='device_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticsdevice')),
                ('patient_journey_id', models.ForeignKey(blank=True, db_column='patient_journey_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticspatientjourney')),
                ('survey_id', models.ForeignKey(blank=True, db_column='survey_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.analyticssurvey')),
            ],
            options={
                'db_table': 'survey_results',
            },
        ),
    ]
